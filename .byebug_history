exit
Custom::Redis.get('qhd_hour').nil?
Custom::Redis.get('qhd_hour')
$redis.get('qhd_hour').nil?
$redis.get('qhd_hour')
n
exit
data
n
@qhdbyday
@qhdday
exit
flag
l
data
c
n
data.length
data
exit
data
exit
data
$redis.keys
exit
$redis.get('get_rank_chart_data_day')
$redis.keys
$redis.get('get_rank_chart_data')
exit
data.as_json
data
tmp.as_json!
tmp
tmp.as_json.class
tmp.as_json
a.class
a
a=tmp
a = Hash.new
tmp.to_hash
tmp.to_json
tmp
tmp.class
tmp.methods
tmp.to_hash
tmp.to_hash!
n
exit
n
exit
tmp
n
exit
p tmp
tmp
n
exit
n
exit
v.length
v.size
v.class
p v
exit
tmp['data_real_time']
tmp['data_real_time'}
p tmp
p v
exit
p v
continue
p v
exit
p v
v
k
c
rank
c
n
@rank
exit
help
n
@rank
exit
fore_range[1]
fore_range[0]
fore_range.length
fore_range.keys
fore_range
exit
n
file
n
fn
n
fn
py
c
n
c
forecast_data_hour_ann[4].length
forecast_data_hour_ann[2].length
forecast_data_hour_ann[1].length
forecast_data_hour_ann[0].length
forecast_data_hour_ann.length
c
n
c
forecast_data_hour_ann[4].length
forecast_data_hour_ann[2].length
forecast_data_hour_ann[1].length
forecast_data_hour_ann[0].length
forecast_data_hour_ann.length
c
n
c
puts v
d
n
get_lev(v["min"])
v["min"]
n
c
@weather
ForecastDailyDatum.all
c
n
d
c
n
fore_range
continue
@weather
fore_range
c
@weather
c
get_lev(v["min_forecast"])
v["min_forecast"]
c
exit
@weather
c
fore_range
@weather
v["min_forecast"]
v[:min_forecast]
puts v
v["min_forecast"]
c
n
fore_range
c
fore_range
@weather
c
n
fore_range
c
@weather
c
puts v
@weather
k
puts v
pust v
v
n
ForecastDailyDatum.all
ForecastDailyDatum.destroy_all
ForecastDailyDatum.destroy
ForecastDailyDatum.all
ForecastDailyDatum.destory_all
ForecastDailyDatum.all
SELECT  "forecast_daily_data".* FROM "forecast_daily_data"  WHERE "forecast_daily_data"."city_id" = 18 AND "forecast_daily_data"."publish_date" = '2016-05-30' AND "forecast_daily_data"."forecast_date" = '2016-05-30' AND "forecast_daily_data"."max_forecast" = 125.33333333333333 AND "forecast_daily_data"."min_forecast" = 105.33333333333333 AND "forecast_daily_data"."main_pollutant" = 'PM2.5' LIMIT 1
ForecastDailyDatum.find_or_create_by(d)
ForecastDailyDatum.create(d)
d
c
continue
City.find_by_city_name_pinyin('langfangshi')
City.find_by_city_name('langfangshi')
n
c
n
f
n
temp.first[0].to_date
n
fore_range.length
c
@weather
c
ForecastDailyDatum.get_three_daily_range()
fs = ForecastDailyDatum.where(publish_date: Date.today)
fs.first
fs.each
fs = ForecastDailyDatum.where(publish_date: Date.today)
fs = ForecastDailyDatum.where(publish_date: td)
kkkkkkkkkkkkkfs = ForecastDailyDatum.where(publish_date: td)
ForecastDailyDatum.get_three_daily_range()
ForecastDailyDatum.get_three_daily_range
exit
t['min_forecast']
t['min_forecast'] != nil ? "#{t['min_forecast']}~#{t['max_forecast']}": nil
t = forecast_data[time] 
forecast_data = @weather
t = forecast_data[time] 
time = 1.day.from_now.strftime("%Y%m%d")
@weather
c
@weather
c
@weather
n
c
n
s
n
c
p city
p l
l
mp
exit
p l
l
city
mp
exit
c
cc
c
n
mp
exit
mp
mp.class
exit
n
mp.id
mp
exit
exity
hs
n
data.keys
n
exit
data['time']
data['date']
hs[:time]
n
l
