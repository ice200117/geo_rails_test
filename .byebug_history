c
@monitor_forecast_hour_month_diff
exit
@monitor_forecast_hour_month_diff
n
data
ret_data
exit
show
pry
c
delete
help
c
f
c
data[i+1][1]
data[i+1][0]
ret_data
n
st
ret_data
n
puts i
n
ret_data
n
ret_data
c
puts i
i
data
c
cc
c
d.publish_datetime+36.hours
d.publish_datetime+12.hours
d.forecast_datetime
c
d.forecast_datetime < d.publish_datetime+36.hours
d.forecast_datetime >= d.publish_datetime+12.hours
d.publish_datetime+12.hours
d.forecast_datetime
c
a << 3
a = [1,2]
d.forecast_datetime >= d.publish_datetime+12.hours && d.forecast_datetime < d.publish_datetime+36.hours
d.forecast_datetime >= d.publish_datetime+12.hours
d.publish_datetime+12.hours
d.publish_datetime
d.forecast_datetime
d
data
exit
p city
n
p time
p t
s
n
p model
p hs
s
n
p hs
p sh
s
n
p hs
p sh
n
exit
p day_city
n
nn
n
day_city
n
time
t
model
s
n
s
n
 hour_data_common(hs,TempBdHour)
p ' if hour_data_common(hs,TempBdHour)
n
p hs
n
p hs
p sh
n
secretstr.class
q
c
CL
ncfile
pl
var_name
force
p force
c
exit
n
time
t
model
s
n
exit
c
exit
@forecast_data
exit
n
exit
tmp
n
exit
n
exit
n
datalines[25..55].each do |t| puts t end
datalines[25..55].size
n
exit
datalines[25..-1].size
n
exit
datalines.class
datalines
n
f.readlines[25..-1].size
f.readlines[25..-1].each do |line|
f.readlines[25..-1].class
f.readlines
f.readlines[25,-1].class
f.readlines[25].size
f.readlines[25,-1].length
f.readlines[25,-1].size
f.readlines.size
f.size
exit
f.readlines.size
File.open(path+dirname+"/"+filename,"r").readlines.size
File.open(path+dirname+"/"+filename,"r")
File.open(path+dirname+"/avg.txt","w")
File.open(path+dirname+
f.readlines.size
f.class
w
f.readlines.size
datalines
n
exit
f.readlines.class
f.readlines.size
f.readlines
f
datalines
n
exit
n
p f
f
n
f
n
exit
File.exist?(path+dirname+"a")
File.exists?(path+dirname+"a")
Dir.exists?(path+dirname)
File.exists?(path+dirname+'a')
File.exists?(path+dirname+filename)!
File.exists?(path+dirname+filename)
filename
f
n
dirname
exit
p @ret
exit
p @ret
exit
n
@ret
n
@weather
s
time
n
p v
k
n
temp
time
n
@weather
p v
n
v
k
s
n
exit
n
temp
exit
mail
exit
mail.to_s
mail
exit
n
exit
up
n
exit
n
exit
data
n
data
n
exit
data['zhishus']['zhishu'].to_s.class.to_array
data['zhishus']['zhishu'].to_s.class.to_a
data['zhishus']['zhishu'].to_s.class
data['zhishus']['zhishu'].to_s
data['zhishus']['zhishu']
c
exit
p c[0].id
p c.size
p c
c.id
p c
p c.id
p c
p c.id
p c
c
exit
@citykey
n
citykey
s
exit
p v
v
n
p c
c
exit
n
