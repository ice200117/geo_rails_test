# Scaffolding generated by Casein v5.1.1.5

module Casein
  class ForecastDailyDataController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Forecast daily data'
      @forecast_daily_data = ForecastDailyDatum.order(sort_order(:publish_date)).reverse_order.paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View forecast daily datum'
      @forecast_daily_datum = ForecastDailyDatum.find params[:id]
      @city_name = @forecast_daily_datum.city.city_name
    end
  
    def new
      @casein_page_title = 'Add a new forecast daily datum'
      @forecast_daily_datum = ForecastDailyDatum.new(publish_date: Date.today)
    end

    def create
      @forecast_daily_datum = ForecastDailyDatum.new forecast_daily_datum_params
    
      if @forecast_daily_datum.save
        flash[:notice] = 'Forecast daily datum created'
        redirect_to casein_forecast_daily_data_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new forecast daily datum'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update forecast daily datum'
      
      @forecast_daily_datum = ForecastDailyDatum.find params[:id]
    
      if @forecast_daily_datum.update_attributes forecast_daily_datum_params
        flash[:notice] = 'Forecast daily datum has been updated'
        redirect_to casein_forecast_daily_data_path
      else
        flash.now[:warning] = 'There were problems when trying to update this forecast daily datum'
        render :action => :show
      end
    end
 
    def destroy
      @forecast_daily_datum = ForecastDailyDatum.find params[:id]

      @forecast_daily_datum.destroy
      flash[:notice] = 'Forecast daily datum has been deleted'
      redirect_to casein_forecast_daily_data_path
    end
  
    private
      
      def forecast_daily_datum_params
        params.require(:forecast_daily_datum).permit(:city_id, :publish_date, :forecast_date, :max_forecast, :min_forecast, :main_pollutant)
      end

  end
end
